package days07;

public class Array01 {

	public static void main(String[] args) {
		// 배열
		// 동일한 변수이름에 번호를 붙여 다수개의 대이터를 한번에 저장 할 수 있는 방법
		// 1. 다수개의 변수를 같은 이름으로 손쉽게 선언하여 사용가능
		// 2. 하나의 이름으로 다수개의 변수들을 제어할 수 있음
		
		/*
			int kor1,kor2,kor3,eng1,eng2,eng3,mat1,mat2,mat3,tot1,tot2,tot3;
			double avg1,avg2,avg3;
			
			일반변수와 배열변수의 생성비교
			
			int [] kor = new Int[3];
			int [] eng = new Int[3];
			int [] mat = new Int[3];
			int [] tot = new Int[3];
			double [] avg = new Double[3];
		 
		 */
		
		//배열의 생성방법
		int [] a; // 참조변수(래퍼런스 변수) 생성 : 배열의 이름이 되는 변수 생성
		// 참조변수는 메모리 내부의 공간중 HEAP이라는 영역안에서 실제데이터가 저장된곳을 지정하고
		// 그 위치주소를 저장하는 변수		
		
		// 참조값 = 레퍼런스값 = 주소값 = 어드레스값
		// 참조변수는 위 네개의 이름이 지칭하는 그 하나의 값을 저장하는 변수
		// a = 123; 에러. a변수는 정수를 저장하는 변수가 아니고, 주소를 저장하는 변수이기 때문에 에러.
		// 123번지를 임의로 개발자가 사용한건 위험한 행동입니다.
		
		//현재는 배열에 정수를 몇개를 저장 할 수 있는지 갯수고아 메모리가 정해지지 않음
		// 배열을 사용하기전에 저장할 수 있는 갯수와 Heap에 만들어진 공간 주소를 반드시 저장하고 사용
		a = new int[3]; // 할당된 메모리 주소 저장
		int [] b = new int[3]; // 참조변수와 메모리 할당 명령을 합쳐서 한줄에 쓰기도 함
		// new int[3] : Heap 영역에 정수가 3개 저장될 공간을 "새롭게" 확보하라는 명령
		//					   new가 새 메모리를 확보한 후 그 시작 주소를 왼쪽 참조변수에 전달-저장되게 해줍니다.
		// 	새로운 메모리는 int(4byte) 3개가 저장되어야 하므로 총 12byte가 확보
		
		// 배열의 각 공간에 값을 대입하는 방법
		// 인덱스 연산을 사용
		// 배열의 인덱스 : 시작은 0, 종료는 배열크기-1
		// 배열변수명[인덱스] = 값;
		a[0] = 10;   // 배열의 1번째 요소에 값을 대입
		a[1] = 20;   // 배열의 2번째 요소에 값을 대입
		a[2] = 30;   // 배열의 3번째 요소에 값을 대입
		
		int i = 1;
		int a1, a2, a3;
		
		i = 0;
		b[i] = 10;
		i = 1;
		b[i] = 50;
		b[i+1] = 80;
		
		a[0] = 1;
		b[ a[0] ] = 20;
		
		System.out.println("a[0] : " + a[0]);
		System.out.println("a[1] : " + a[1]);
		System.out.println("a[2] : " + a[2]);
		System.out.println("b[0] : " + b[0]);
		System.out.println("b[1] : " + b[1]);
		System.out.println("b[2] : " + b[2]);
	
		
	}

}
